name: CI/CD Pipeline

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Assemble with Gradle
        run: ./gradlew assemble

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/libs/*.jar
            build/reports/tests/test
          retention-days: 1

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run tests
        run: ./gradlew test

  push-image:
    needs: [build, test]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      BRANCH_NAME: ${{ github.ref_name }}
      IS_MAIN: ${{ github.ref == 'refs/heads/main' }}
      IS_DEV: ${{ github.ref == 'refs/heads/dev' }}

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short SHA
        id: shortsha
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Define image tags
        id: tag
        run: |
          echo "IMAGE_TAG=${SHORT_SHA}-${BRANCH_NAME}" >> $GITHUB_ENV
          TAGS="${REGISTRY}/${IMAGE_NAME}:${SHORT_SHA}-${BRANCH_NAME}"
          TAGS="${TAGS}
          ${REGISTRY}/${IMAGE_NAME}:${BRANCH_NAME}-latest"
          if [ "$IS_MAIN" = "true" ]; then
          TAGS="${TAGS}
          ${REGISTRY}/${IMAGE_NAME}:latest"
          fi
          echo "TAGS<<EOF" >> $GITHUB_ENV
          echo "$TAGS" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.TAGS }}

      - name: Trigger deployment
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.INFRA_ACCESS_TOKEN }}
          repository: tikelespike/gamestats-infra
          event-type: deploy
          client-payload: |
            {
              "backendImageTag": "${{ env.IMAGE_TAG }}",
              "environment": "${{ github.ref_name == 'main' && 'prod' || 'dev' }}"
            }
